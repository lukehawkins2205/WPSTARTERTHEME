{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\luke.hawkins\\\\Local Sites\\\\clientsite\\\\app\\\\public\\\\wp-content\\\\themes\\\\nameoftheme\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\luke.hawkins\\\\Local Sites\\\\clientsite\\\\app\\\\public\\\\wp-content\\\\themes\\\\nameoftheme\",\"filename\":\"C:\\\\Users\\\\luke.hawkins\\\\Local Sites\\\\clientsite\\\\app\\\\public\\\\wp-content\\\\themes\\\\nameoftheme\\\\gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\luke.hawkins\\\\Local Sites\\\\clientsite\\\\app\\\\public\\\\wp-content\\\\themes\\\\nameoftheme\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme",
      "filename": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme\\gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme\\gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme\\",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.clean = exports.copy = exports.images = exports.watchForChanges = exports.styles = exports.reload = exports.serve = exports.scripts = void 0;\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//PACKAGES\n//This is mostly for module bundling JS files\n//webpack-stream provides a couple of solutions for creating multiple entry points.\n//What does this do? and the below imports. //series, parallel: compose tasks\n//What does this do?\n//is depenacie for autoprefixer. might be revered though?\n//instead of seeing bundle.js, it shows the actual path the selector relates to\n//Compress images in src then moves to dist\n//Responsible for deleting the dist folder.\n//Plugin that refreshes the browser each time tasks finish running\n//What does this do?\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)(['src/js/bundle.js', 'src/js/admin.js']) //entry points\n  .pipe((0, _vinylNamed[\"default\"])()) //pipe named plugin before webpack: allows us to use [name] placeholder. We will get two bundles in dist/js\n  .pipe((0, _webpackStream[\"default\"])({\n    //pipe the webpack plugin and specify options for it.\n    module: {\n      rules: [//the rules field in the module options lets webpack know what loaders to use to transform our files. transform JS files using babel-loader\n      {\n        test: '/\\.js$',\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: ['@babel/preset-env']\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    //devtool option will add source maps but not in prod\n    output: {\n      filename: '[name].js'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n}; //TASK: Serve. This starts the Browsersync server\n//pointed to our local WordPress server using the proxy option.\n\n\nexports.scripts = scripts;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: 'http://clientsite.local/'\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n}; //TASK - What does it do?\n\n\nexports.reload = reload;\n\nvar styles = function styles() {\n  return (0, _gulp.src)(['src/scss/bundle.scss', 'src/scss/admin.scss']).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())) //if prod = false, initalise source map\n  .pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)) //log error\n  .pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([_autoprefixer[\"default\"]]))) //if prod = true, run postcss, minify?\n  .pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css')).pipe(server.stream());\n}; //This task watches for changes in the below directory. you have the path and the task it calls when a change is detected.\n\n\nexports.styles = styles;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', styles);\n  (0, _gulp.watch)('src/images/**/*.{jpg,jpeg,png,svg,gif}', (0, _gulp.series)(images, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(scripts, reload));\n  (0, _gulp.watch)('**/*.php', reload);\n}; //TASK what does it do?\n\n\nexports.watchForChanges = watchForChanges;\n\nvar images = function images() {\n  return (0, _gulp.src)('src/images/**/*.{jpg,jpeg,png,svg,gif}') //give src() a function a glob that matches all .jpg exts\n  .pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpImagemin[\"default\"])())) //if in PRODUCTION mode, run imagemin() plugin\n  .pipe((0, _gulp.dest)('dist/images')); //move images to destination folder 'dist/images'\n}; //Now any images that we drop into src/images will be copied when we run gulp images. However, running gulp images --prod, will both compress and copy the image over.\n//TASK: Copy any files apart from js & SASS\n\n\nexports.images = images;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src{/images,js,scss}/**/*']) //We are telling Gulp to match all files and folders inside src (src/**/*), EXCEPT the images, js and scss folders\n  .pipe((0, _gulp.dest)('dist'));\n}; //Try adding any file or folder to the src directory and it should be copied over to the the /dist directory\n//TASK: That will delete the dist folder\n\n\nexports.copy = copy;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n}; //del returns a promise, thus we dont have to call cb() func\n//Compsing Tasks\n\n\nexports.clean = clean;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, scripts), serve, watchForChanges); //Series: Runs tasks one after the other //Parallel: Runs tasks simutanously\n\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, images, copy, scripts)); //Do I need phpfix and lint here?\n\nexports.build = build;\nvar _default = dev; //export default dev means if we run 'GULP' it will automaticly use the dev task.\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "scripts",
        "pipe",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "devtool",
        "output",
        "filename",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "init",
        "proxy",
        "reload",
        "styles",
        "sourcemaps",
        "on",
        "sass",
        "logError",
        "autoprefixer",
        "compatibility",
        "write",
        "stream",
        "watchForChanges",
        "images",
        "copy",
        "clean",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\luke.hawkins\\Local Sites\\clientsite\\app\\public\\wp-content\\themes\\nameoftheme\\",
      "sourcesContent": [
        "//PACKAGES\r\nimport webpack from 'webpack-stream'; //This is mostly for module bundling JS files\r\nimport named from 'vinyl-named'; //webpack-stream provides a couple of solutions for creating multiple entry points.\r\n\r\nimport { src, dest, watch, series, parallel } from 'gulp'; //What does this do? and the below imports. //series, parallel: compose tasks\r\nimport yargs from 'yargs';\r\nimport sass from 'gulp-sass';\r\nimport cleanCss from 'gulp-clean-css';\r\nimport gulpif from 'gulp-if';\r\n\r\n//What does this do?\r\nimport postcss from 'gulp-postcss'; //is depenacie for autoprefixer. might be revered though?\r\nimport sourcemaps from 'gulp-sourcemaps'; //instead of seeing bundle.js, it shows the actual path the selector relates to\r\nimport autoprefixer from 'autoprefixer';\r\n\r\nimport imagemin from 'gulp-imagemin'; //Compress images in src then moves to dist\r\n\r\nimport del from 'del'; //Responsible for deleting the dist folder.\r\n\r\nimport browserSync from \"browser-sync\"; //Plugin that refreshes the browser each time tasks finish running\r\n\r\n//What does this do?\r\nconst PRODUCTION = yargs.argv.prod;\r\n\r\n\r\nexport const scripts = () => {\r\n  return src(['src/js/bundle.js', 'src/js/admin.js']) //entry points\r\n  .pipe(named()) //pipe named plugin before webpack: allows us to use [name] placeholder. We will get two bundles in dist/js\r\n  .pipe(webpack({ //pipe the webpack plugin and specify options for it.\r\n    module: {\r\n      rules: [ //the rules field in the module options lets webpack know what loaders to use to transform our files. transform JS files using babel-loader\r\n        {\r\n          test: '/\\.js$',\r\n          use: {\r\n            loader: 'babel-loader',\r\n            options: {\r\n              presets: ['@babel/preset-env']\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    mode: PRODUCTION ? 'production' : 'development',\r\n    devtool: !PRODUCTION ? 'inline-source-map' : false, //devtool option will add source maps but not in prod\r\n    output: {\r\n      filename: '[name].js'\r\n    },\r\n  }))\r\n  .pipe(dest('dist/js'))\r\n}\r\n\r\n\r\n//TASK: Serve. This starts the Browsersync server\r\n//pointed to our local WordPress server using the proxy option.\r\nconst server = browserSync.create();\r\nexport const serve = done => { \r\n  server.init({\r\n    proxy: 'http://clientsite.local/'\r\n  });\r\n  done();\r\n};\r\n\r\nexport const reload = done => {\r\n  server.reload()\r\n  done()\r\n}\r\n\r\n//TASK - What does it do?\r\nexport const styles = () => {\r\n    return src(['src/scss/bundle.scss', 'src/scss/admin.scss'])\r\n      .pipe(gulpif(!PRODUCTION, sourcemaps.init())) //if prod = false, initalise source map\r\n      .pipe(sass().on('error', sass.logError)) //log error\r\n      .pipe(gulpif(PRODUCTION, postcss([ autoprefixer ]))) //if prod = true, run postcss, minify?\r\n      .pipe(gulpif(PRODUCTION, cleanCss({compatibility:'ie8'})))\r\n      .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\r\n      .pipe(dest('dist/css'))\r\n      .pipe(server.stream());\r\n  }\r\n\r\n//This task watches for changes in the below directory. you have the path and the task it calls when a change is detected.\r\nexport const watchForChanges = () => {\r\n  watch('src/scss/**/*.scss', styles);\r\n  watch('src/images/**/*.{jpg,jpeg,png,svg,gif}', series(images, reload));\r\n  watch(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], series(copy, reload));\r\n  watch('src/js/**/*.js', series(scripts, reload));\r\n  watch('**/*.php', reload);\r\n}\r\n\r\n//TASK what does it do?\r\nexport const images = () => {\r\n  return src('src/images/**/*.{jpg,jpeg,png,svg,gif}') //give src() a function a glob that matches all .jpg exts\r\n    .pipe(gulpif(PRODUCTION, imagemin())) //if in PRODUCTION mode, run imagemin() plugin\r\n    .pipe(dest('dist/images')) //move images to destination folder 'dist/images'\r\n}\r\n//Now any images that we drop into src/images will be copied when we run gulp images. However, running gulp images --prod, will both compress and copy the image over.\r\n\r\n//TASK: Copy any files apart from js & SASS\r\nexport const copy = () => {\r\n  return src(['src/**/*', '!src/{images,js,scss}', '!src{/images,js,scss}/**/*']) //We are telling Gulp to match all files and folders inside src (src/**/*), EXCEPT the images, js and scss folders\r\n    .pipe(dest('dist'));\r\n}\r\n//Try adding any file or folder to the src directory and it should be copied over to the the /dist directory\r\n\r\n//TASK: That will delete the dist folder\r\nexport const clean = () => del(['dist']) //del returns a promise, thus we dont have to call cb() func\r\n\r\n//Compsing Tasks\r\nexport const dev = series(clean, parallel(styles,images,copy, scripts), serve, watchForChanges) //Series: Runs tasks one after the other //Parallel: Runs tasks simutanously\r\nexport const build = series(clean, parallel(styles,images,copy, scripts)) //Do I need phpfix and lint here?\r\nexport default dev //export default dev means if we run 'GULP' it will automaticly use the dev task.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1614763811118
  }
}